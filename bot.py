from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, CallbackQueryHandler, ContextTypes, ConversationHandler
import csv

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '7711800920:AAFHz_sA0QwWGK5qHRT0qvKYlNfkUOtMxWs'

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
ASK_TRACKING = 1

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV
def load_tracking_data():
    data = {}
    try:
        with open('tracking.csv', newline='', encoding='utf-8') as csvfile:
            reader = csv.reader(csvfile)
            for row in reader:
                if len(row) >= 2:
                    data[row[0].strip()] = row[1].strip()
    except FileNotFoundError:
        print("‚ö†Ô∏è –§–∞–π–ª tracking.csv –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    return data

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üì¶ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–æ–≤–∞—Ä–∞", callback_data='check_status')],
        [InlineKeyboardButton("üì£ –ö–∞–Ω–∞–ª Arena Cargo", url="https://t.me/arenacargo")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Arena Cargo!", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == 'check_status':
        await query.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä:")
        return ASK_TRACKING

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä–∞
async def receive_tracking(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tracking_code = update.message.text.strip()
    data = load_tracking_data()
    status = data.get(tracking_code, '‚ùå –¢—Ä–µ–∫-–Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å.')
    await update.message.reply_text(f'üì¶ –°—Ç–∞—Ç—É—Å —Ç–æ–≤–∞—Ä–∞:\n{status}')
    return ConversationHandler.END

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
def main():
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app = ApplicationBuilder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(button_handler)],
        states={ASK_TRACKING: [MessageHandler(filters.TEXT & ~filters.COMMAND, receive_tracking)]},
        fallbacks=[]
    )

    app.add_handler(CommandHandler('start', start))
    app.add_handler(conv_handler)

    app.run_polling()

if __name__ == '__main__':
    main()
